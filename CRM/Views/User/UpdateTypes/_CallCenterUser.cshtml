@using CRM.Models
@using CRM.Domain
@model CallCenterFormModel
@{
	string actionUrl = "/ajax/callcenterupdate/" + ViewBag.Querystring;
	AjaxOptions options = new AjaxOptions { HttpMethod = "POST", OnSuccess = "onFormSubmitSuccess", OnFailure = "PostFailure", Url = actionUrl };
	List<Vertical> verticals = Vertical.GetVerticalList();
	string checkedAttr;
	string role = Model.UserTypeId > 0 ? Model.UserTypeId.ToString() : "";
}
@using (Ajax.BeginForm(null, null, options, new { @class = "form-horizontal form-callcenter", autocomplete = "off" }))
{
   <div class="panel-body" ng-controller="update">
       @Html.Partial("_ModalDialog", DialogTypes.Validation)
       <fieldset>
			<legend>Role:</legend>
			<div class="form-group">
				<div class="col-md-3">
					<select name="UserTypeId" class="form-control" ng-model="role" ng-init="role='@role'" data-val="true" 
							data-val-required="User Role is a required field." aria-required="true">
						<option value="">--Select Role--</option>
						<option value="@((int)UserTypes.CallCenterManager)">Manager</option>
						<option value="@((int)UserTypes.CallCenterAgent)">Agent</option>
					</select>
					@*
					<span class="radio-group" ng-init="role=@Model.UserTypeId">
						<label>@Html.RadioButtonFor(model => model.UserTypeId, (int)UserTypes.CallCenterManager, new { id = "radio_Manager", @class = "requiredQuestion", @ng_model = "role" }) Manager</label>  or
						<label>@Html.RadioButtonFor(model => model.UserTypeId, (int)UserTypes.CallCenterAgent, new { id = "radio_Associate", @class = "requiredQuestion", @ng_model = "role" }) Agent</label>
					</span>
					*@
				</div>
			</div>
       </fieldset>
       <fieldset ng-class="{ hidden: role=='2' }">
           <legend>Verticals:</legend>
           <div class="form-group vertical-list question-group" data-message="You must select at least one vertical.">
                <div class="col-md-12 checkbox-group">
                    @foreach(Vertical vertical in verticals) {
                        checkedAttr = Model.VerticalIds.Any(v => vertical.VerticalId == v) ? "checked" : "";
                        <div class="checkbox-inline">
                            <label>
                                <input type="checkbox" name="VerticalIds" ng-class="{ requiredQuestion: role!='2' }" value="@vertical.VerticalId" @checkedAttr />
                                @vertical.VerticalName
                            </label>
                        </div>
                    }
                </div>
            </div>
       </fieldset>
        <fieldset>
            <legend>Login Credentials:<span class="requieredCopy">"*" Denotes a required field.</span></legend> 
            <div class="form-group">
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.UserName, new {@class = "form-control", @placeholder = "UserName *", @autocomplete = "off", @readonly="" })
                </div>
                <div class="col-md-6 checkbox pad-left-42">
                    <label>Enabled @Html.CheckBoxFor(model => model.Enabled)</label>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-6">
                    @Html.PasswordFor(model => model.Password, new {@class = "form-control", @placeholder = "Password must be between 8 and 32 characters long. *", @Value = Model.Password })
                    <button class="btn togglePassword" tabindex="-1" title="Show Password"><span class="glyphicon glyphicon-eye-open"></span></button>
                </div>
                <div class="col-md-6">
                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", @placeholder = "Confirm Password *", @Value = Model.Password })
                </div>
            </div>
        </fieldset>
        <fieldset>
            <legend>Contact Information: <span class="requieredCopy">"*" Denotes a required field.</span></legend> 
            <div class="form-group">
                <div class="col-md-6">
                    <span style="color:#ff0000;float:right;">** Already assigned</span>
                    @Html.Raw(CallCenterFormModel.Five9AgentDropDown(Model.Five9AgentId))
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.FirstName, new {@class = "form-control", @placeholder = "First Name *" })
                </div>
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.LastName, new {@class = "form-control", @placeholder = "Last Name *" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.Phone, new {@class = "form-control", @placeholder = "Phone Number" })
                </div>
                <div class="col-md-6">
                    @Html.TextBoxFor(model => model.Email, new {@class = "form-control", @placeholder = "Email Address *" })
                </div>
            </div> 
        </fieldset>
        <div style="border-top: 1px solid #999; padding-top: 20px"  class="form-group">
            <div class="col-md-12">
                @Html.Hidden("UserId", Model.UserId)
                <button id="btn-fbsignup" type="submit" class="btn btn-primary pull-right btn-lg"><span class="glyphicon glyphicon-user"></span> Update Manager/Agent</button>
            </div>
        </div>
    </div>
}